##DESCRIPTION
## DBsubject(Statistics)
## DBchapter(Plotting)
## DBsection(Choose appropriate plot)
## Institution(SVSU)
## Author(Jan Hlavacek)
## MLT(CI_1p_03)
## MLTleader(1)
## Level(3)
## KEYWORDS('visualization')
##ENDDESCRIPTION

# File Created: 10/21/2017
# Location: SVSU
# Course: General Statistics

DOCUMENT();     
loadMacros("PGstandard.pl",  
           "PGauxiliaryFunctions.pl",
           "PGchoicemacros.pl",
           "answerHints.pl",
           "MathObjects.pl",
           "PGML.pl",
);     
TEXT(&beginproblem);
$showPartialCorrectAnswers = 1;

Context("Numeric");

$plot1 = new_checkbox_multiple_choice();

$plot1->qa(
"Select all types of plots that would be appropraite for displaying a distribution of a continuous numerical variable:",
"Histogram",
"Density plot",
"Dot plot"
);

$plot1->extra(
"Scatterplot",
"Pie graph",
"Bar graph",
"Line graph",
);

$plot2 = new_checkbox_multiple_choice();

$plot2->qa(
"Select all types of plots that would be appropraite for displaying a relatioship between a categorical and numerical variable:",
"Box plot",
"Jitter plot",
"Faceted histogram",
);

$plot2->extra(
"Scatterplot",
"Pie graph",
"Bar graph",
"Line graph",
"Mosaic plot",
);

$plot3 = new_multiple_choice();

$plot3->qa(
"Which of the following types of plots would be most appropraite for displaying a relatioship between two numerical variables?",
"Scatter plot",
);

$plot3->extra(
"Histogram",
"Jitter plot",
"Faceted histogram",
"Pie graph",
"Bar graph",
"Line graph",
"Mosaic plot",
);

sub str_union_inter_lengths {
    my ($str1, $str2) = @_;
    my @ar1 = (split //, $str1);
    my @ar2 = (split //, $str2);

    my (%union, %intersection);
    foreach $c ( @ar1, @ar2 ) {
        $union{$c}++ && $intersection{$c}++
    }

    my @u = keys %union;
    my @i = keys %intersection;

    return (scalar @u, scalar @i);
}

sub is_overlap {  #if str2 contains some of the letters in str1, but also something extra
    my ($str1, $str2) = @_;
    my ($union_len, $inter_len) = str_union_inter_lengths($str1, $str2);
    if ($inter_len == 0) {return 0};
    if ($inter_len < length($str2)) {return 1};
    return 0;
}

sub is_subset {  #if str2 is a nonempty proper subset of str1
    my ($str1, $str2) = @_;
    my ($union_len, $inter_len) = str_union_inter_lengths($str1, $str2);
    if ($inter_len == 0) {return 0};
    if ($inter_len == length($str2)) {
        if ($inter_len < $union_len) {return 1};
    }
    return 0;
}

sub my_checkbox_cmp {
        my      $correctAnswer = shift @_;
        my %options = @_;
        assign_option_aliases( ~~%options,
     );
    set_default_options(        ~~%options,
                        'debug'                                 =>      0,
                        'type'                  =>  'checkbox_cmp',
    );
        my $answer_evaluator = new AnswerEvaluator(
                correct_ans      => $correctAnswer,
                type             => $options{type},
        );
        # pass along debug requests
        $answer_evaluator->{debug} = $options{debug};
        
        # join student answer array into a single string if necessary
        $answer_evaluator->install_pre_filter(sub {
                my $rh_ans = shift;
                $rh_ans->{_filter_name} = 'convert student_ans to string';
                $rh_ans->{student_ans} = join("", @{$rh_ans->{student_ans}}) 
                         if ref($rh_ans->{student_ans}) =~/ARRAY/i;
                $rh_ans;
        });
        # ignore order of check boxes
        $answer_evaluator->install_pre_filter(~~&ignore_order);
        # compare as strings
        $answer_evaluator->install_evaluator(sub {
                my $rh_ans     = shift;
                $rh_ans->{_filter_name} = 'compare strings generated by checked boxes';
                $rh_ans->{score} = ($rh_ans->{student_ans} eq $rh_ans->{correct_ans}) ? 1 : 0;
                $rh_ans;
        });
        # fix up preview displays
        $answer_evaluator->install_post_filter( sub {
                my $rh_ans      = shift;
                $rh_ans->{_filter_name} = 'adjust preview strings';
                $rh_ans->{type} = $options{type};
                $rh_ans->{preview_text_string}  =       '\text{'.$rh_ans->{student_ans}.'}',
                $rh_ans->{preview_latex_string} =       '\text{'.$rh_ans->{student_ans}.'}',
                $rh_ans;
        });

        return $answer_evaluator;
}


BEGIN_PGML

Selecting the right type of plot is extremely important when visualizing your
data.  Choose the approprite types of plots in the following three situations:

[@ $plot1->print_q() @]***
[@ $plot1->print_a() @]***

[@ $plot2->print_q() @]***
[@ $plot2->print_a() @]***

[@ $plot3->print_q() @]***
[@ $plot3->print_a() @]***

END_PGML

#install_problem_grader(~~&std_problem_grader);

ANS( my_checkbox_cmp( $plot1->correct_ans() ) );
ANS( checkbox_cmp( $plot2->correct_ans() ) );
ANS( checkbox_cmp( $plot3->correct_ans() ) );

BEGIN_PGML_SOLUTION
1.  When displaying the distribution of a single continuous numerical variable,
    the best types of plots are _histogram_, a _density plot_, or a _dot plot_.

2.  When displaying the relationship between a categorical variable and a numerical variable,
    the best types of plots are a _faceted histogram_, a _box plot_, or a
    _jitter plot_.  There are other types of plots that can be used, such as a _violin plot_
    or a _strip chart_.

3.  The relationship between two numerical variables is best displayed by a _scatterplot_.
END_PGML_SOLUTION
ENDDOCUMENT();
