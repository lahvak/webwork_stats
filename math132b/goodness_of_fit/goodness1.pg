##DESCRIPTION
## DBsubject(Statistics)
## DBchapter(Hypothesis Testing)
## DBsection(Goodness of fit test)
## Institution(SVSU)
## Author(Jan Hlavacek)
## MLT(CI_1p_03)
## MLTleader(1)
## Level(3)
## KEYWORDS('hypothesis testing', 'goodness of fit', 'chi-square')
##ENDDESCRIPTION

# File Created: 2021-10-31
# Location: SVSU
# Course: Biostatistics

DOCUMENT();     
loadMacros("PGstandard.pl",  
           "PGauxiliaryFunctions.pl",
           "MathObjects.pl",
           "PGML.pl",
           "niceTables.pl",
           "parserRadioButtons.pl",
           "parserOneOf.pl",
           "scaffold.pl",
);
TEXT(&beginproblem);
$showPartialCorrectAnswers = 1;

Context("Numeric");
Context()->flags->set(
  tolerance => 0.01, # about 2 decimal places
  tolType => "absolute",
);

# Create the first 6 expected values and differences

@expected = ();
@diffs = ();
$sumdiffs = 0;
$total = 0;
foreach my $i (0..6) {
    my $x = random(5,50,0.01);
    push @expected, $x;
    my $frac = $x - ceil($x);
    my $mult = -sgn($sumdiffs);
    if ( $mult == 0 ) { $mult = list_random(-1,1); }
    my $diff = $mult*random(1, int($x/3), 1) - $frac;
    $sumdiffs += $diff;
    push @diffs, $diff;
    $total += $x;
}

# Calculate the seventh diff and the seventh expected:

$lastdiff = -$sumdiffs;
$lastexp = random(ceil(2*abs($lastdiff)), 50) - $lastdiff;
push @diffs, $lastdiff;
push @expected, $lastexp;
$total += $lastexp;

$df = $#expected;

@observed = map {$expected[$_] + $diffs[$_]} (0..$#expected);

@percents = map {100*$_/$total} @expected;

@roundedpercents = map {sprintf("%.2f", $_)} @percents;

@newexpected = map {$_ * $total/100} @roundedpercents;

@newdiffs = map {$observed[$_] - $newexpected[$_]} (0..$#newexpected);

@zsq = map {($newdiffs[$_]**2)/$newexpected[$_]} (0..$#newexpected);

$chisq = 0;
foreach my $i (0..7) {
    $chisq += $zsq[$i];
};

@species = ("A".."H");


BEGIN_PGML
Five years ago, a large number of fish were released into a reservoar.  There were 8 species, with the following percentages:

[@ DataTable( [[["species:", midrule=>1], @species], 
               ["percent:",
                @roundedpercents
               ]],
             align => 'r|c|c|c|c|c|c|c|c') @]***

This year reserchers caught a sample of [$total] fish from the reservoar, with theo following species counts:

[@ DataTable( [[["species:", midrule=>1], @species], 
               ["count:",
                @observed
               ]],
             align => 'r|c|c|c|c|c|c|c|c') @]***

They want to perform the goodness of fit test to see if these counts fit the original distribution of the species.

END_PGML

Scaffold::Begin();
Section::Begin("Part 1: Calculate the expected counts:");

BEGIN_PGML
Calculate the _expected counts_ for your sample:

[@ DataTable( [[["species:", midrule=>1], @species], 
               ["expected count:",
               PGML('[____]{$newexpected[0]}'),
               PGML('[____]{$newexpected[1]}'),
               PGML('[____]{$newexpected[2]}'),
               PGML('[____]{$newexpected[3]}'),
               PGML('[____]{$newexpected[4]}'),
               PGML('[____]{$newexpected[5]}'),
               PGML('[____]{$newexpected[6]}'),
               PGML('[____]{$newexpected[7]}'),
               ]],
             align => 'r|c|c|c|c|c|c|c|c') @]***

END_PGML

BEGIN_PGML_SOLUTION
To get the expected counts, we multiply the percentages by the sample size, and divide by 100:

* [` \frac{[$roundedpercents[0]]\cdot [$total]}{100} = [$newexpected[0]] `]
* [` \frac{[$roundedpercents[1]]\cdot [$total]}{100} = [$newexpected[1]] `]
* [` \frac{[$roundedpercents[2]]\cdot [$total]}{100} = [$newexpected[2]] `]
* [` \frac{[$roundedpercents[3]]\cdot [$total]}{100} = [$newexpected[3]] `]
* [` \frac{[$roundedpercents[4]]\cdot [$total]}{100} = [$newexpected[4]] `]
* [` \frac{[$roundedpercents[5]]\cdot [$total]}{100} = [$newexpected[5]] `]
* [` \frac{[$roundedpercents[6]]\cdot [$total]}{100} = [$newexpected[6]] `]
* [` \frac{[$roundedpercents[7]]\cdot [$total]}{100} = [$newexpected[7]] `]
END_PGML_SOLUTION
Section::End();

# Use the student answers to calculate chi square because rounding can mess
# things up.

@student_expected = map { $inputs_ref->{ANS_NUM_TO_NAME($_)} } (1..8); 
@student_expected = map { if ($student_expected[$_] == 0) { $student_expected[$_] = $newexpected[$_] } } (0..$#student_expected); 
@student_diffs = map {$observed[$_] - $student_expected[$_]} (0..$#student_expected);
@student_zsq = map {($student_diffs[$_]**2)/$student_expected[$_]} (0..$#student_expected);

$student_chisq = 0;
foreach my $i (0..7) {
    $student_chisq += $studnet_zsq[$i];
};

$chisqans = OneOf($student_chisq, $chisq);

Section::Begin("Part 2: Calculate the \(\chi^2\)-score of the sample:");
BEGIN_PGML
Using the observed and expected counts, find the [` \chi^2 `] score of the sample:

[` \chi^2 = `] [__________]{$chisqans}

END_PGML

BEGIN_PGML_SOLUTION
To calculate the [`\chi^2`] score, we need to calculate the squared z-score for each of our levels, and then add them all together.

The formula for [` z^2 `] is

[`` z^2 = \frac{\left(\text{observed count} - \text{expected count}\right)^2}{\text{expected count}} ``]

* [` z_1^2 = \frac{([$observed[0]] - [$newexpected[0]])^2}{[$newexpected[0]]} = [$zsq[0]] `]
* [` z_2^2 = \frac{([$observed[1]] - [$newexpected[1]])^2}{[$newexpected[1]]} = [$zsq[1]] `]
* [` z_3^2 = \frac{([$observed[2]] - [$newexpected[2]])^2}{[$newexpected[2]]} = [$zsq[2]] `]
* [` z_4^2 = \frac{([$observed[3]] - [$newexpected[3]])^2}{[$newexpected[3]]} = [$zsq[3]] `]
* [` z_5^2 = \frac{([$observed[4]] - [$newexpected[4]])^2}{[$newexpected[4]]} = [$zsq[4]] `]
* [` z_6^2 = \frac{([$observed[5]] - [$newexpected[5]])^2}{[$newexpected[5]]} = [$zsq[5]] `]
* [` z_7^2 = \frac{([$observed[6]] - [$newexpected[6]])^2}{[$newexpected[6]]} = [$zsq[6]] `]
* [` z_8^2 = \frac{([$observed[7]] - [$newexpected[7]])^2}{[$newexpected[7]]} = [$zsq[7]] `]

then [` \chi^2 = z_1^2 + z_2^2 + \cdots + z_8^2 = [$chisq] `].
END_PGML_SOLUTION
Section::End();
Scaffold::End();
ENDDOCUMENT();
