## DESCRIPTION
## Statistics 305 
## ENDDESCRIPTION

## KEYWORDS('Statistical inference; maximum
## likelihood estimation, Poisson distribution)

## level(4)
## DBsubject(Statistics)
## DBchapter(Point estimation)
## DBsection(Maximum likelihood estimation)
## Date(2014/05/25)
## Institution(University of British Columbia)
## Author(Andy Leung, Jan Hlavacek)
## Level(4)
## TitleText1('No Text')
## AuthorText1('?')
## EditionText1('?')
## Section1('.')
## Problem1('')

########################################################################
DOCUMENT();      

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "unionTables.pl",
  "RserveClient.pl",
  "PGcourse.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;



##############################################################
#  Question and R Setup
##############################################################
Context->("Numeric");

# Do this in R
rserve_start();

# Randomly generate parameters: n, t1 and t2
rserve_eval('lambda <- runif(1, min=4, max=10)');
rserve_eval('y <- rpois(12, lambda)');
rserve_eval('x <- subset(y, y > 0)');
rserve_eval('n <- length(x)');
rserve_eval('lambda1 <- round(lambda, 1) - 1');
rserve_eval('lambda2 <- round(lambda, 1) + 1');
rserve_eval('xsum <- sum(x)');
rserve_eval('xprod <- prod(factorial(x))');
rserve_eval('part_b_ans_num <- lambda1^xsum * exp( -n * lambda1)');
rserve_eval('part_b_ans_denom <- xprod * (1 - exp(-lambda1))^n');
rserve_eval('part_b_ans <- part_b_ans_num/part_b_ans_denom');
rserve_eval('part_b_ans_pow <- floor(log10(part_b_ans))');
rserve_eval('part_b_ans_base <- round(part_b_ans/10^part_b_ans_pow,2)');
rserve_eval('part_b_ans <- which( log10(part_b_ans) < c(-16,-14,-12,-10,99) )[1]-1');
rserve_eval('part_c_ans <- log(lambda2)*xsum - n*lambda2 - log( xprod) - n*log(1 - exp(-lambda2))');
rserve_eval('part_e_ans <- mean(x)');

# Convert the results back to perl
@lambda1 = rserve_eval('lambda1');
$lambda1 = join ", ", @lambda1;
@lambda2 = rserve_eval('lambda2');
$lambda2 = join ", ", @lambda2;
@n = rserve_eval('n');
$n = join ", ", @n;
@x = rserve_eval('paste(x, collapse=",")');
$x = join ", ", @x;

@ans_b = rserve_eval('part_b_ans');
$ans_b = join ", ", @ans_b;
@ans_c = rserve_eval('part_c_ans');
$ans_c = join ", ", @ans_c;
@ans_e = rserve_eval('part_e_ans');
$ans_e = join ", ", @ans_e;

@ans_b_pow = rserve_eval('part_b_ans_pow');
$ans_b_pow = join ", ", @ans_b_pow;
@ans_b_base = rserve_eval('part_b_ans_base');
$ans_b_base = join ", ", @ans_b_base;
@ans_c_round = rserve_eval("round(part_c_ans,3)");
$ans_c_round = join ", ", @ans_c_round;
@ans_e_round = rserve_eval("round(part_e_ans,2)");
$ans_e_round = join ", ", @ans_e_round;

rserve_finish();

# Multiple choice question for part a
$ansa = "\(\displaystyle\lambda/(1 - e^{-\lambda})\)";
$fakea1a = "\(\displaystyle\lambda\)";
$fakea2a = "\(\displaystyle\lambda(1 - e^{-\lambda})\)";
$fakea3a = "\(\displaystyle e^{-\lambda}\)";
$fakea4a = "\(\displaystyle\lambda e^{-\lambda}\)";

$mca = RadioButtons(
  [[$ansa, $fakea1a, $fakea2a, $fakea3a, $fakea4a]],
  $ansa, labels=>"ABC", separator=>"$BR$BR"
);

# Second multiple choice question for part a
$ansa1 = "increasing";
$fakea1a1 = "decreasing";
$fakea2a1 = "neither";

$mca1 = RadioButtons(
  [[$ansa1, $fakea1a1], $fakea2a1], $ansa1
);

# Multiple choice question for part b
@mcb_resp = ["\(L<10^{-16}\)","\(10^{-16}\leq L<10^{-14}\)","\(10^{-14}\leq L<10^{-12}\)","\(10^{-12}\leq L<10^{-10}\)","\(L>10^{-10}\)"];
$ansb = $mcb_resp[$ans_b];
$mcb = RadioButtons(
@mcb_resp, $ansb, labels=>"ABC", separator=>"$PAR"
);


# Multiple choice question for part d
$ansd = "\(\displaystyle\widehat{\lambda}=\left( 1-e^{-\widehat{\lambda}}\right) \overline{x}\)";
$faked1a = "\(\displaystyle\widehat{\lambda}=\lambda \)";
$faked2a = "\(\displaystyle\widehat{\lambda}=\overline{x}\)";
$faked3a = "\(\displaystyle\widehat{\lambda}=e^{-\widehat{\lambda}}\overline{x}\)";
$faked4a = "\(\displaystyle\widehat{\lambda}=$n e^{-\widehat{\lambda}}\overline{x}\)";

$mcd = RadioButtons(
  [[$ansd, $faked1a, $faked2a, $faked3a, $faked4a]], $ansd,
  labels=>"ABC", separator=>"$BR$BR"
);


##############################################################




##############################################################
#  Question in Text
##############################################################
Context()->texStrings;
BEGIN_TEXT

If a variable appears to follow a Poisson distribution, but the value zero is not 
possible, a viable model may be the distribution with probability mass function 
\begin{align*}
\frac{\lambda^x e^{-\lambda}}{x!(1 - e^{-\lambda})}
\end{align*}
for some \(\lambda > 0\) and \(x = 1,2,....\)
$BR
$BR
$BBOLD Part a) $EBOLD
Which of the following is the mean of the distribution given above?
$BR
$BR
\{ $mca->buttons() \}
$BR
$BR
The mean as a function os \(\lambda\) is:
$BR
$BR
\{ $mca1->buttons() \}
$BR
$BR

$BBOLD Part b) $EBOLD
The model quoted may be helpful in the following situation: the
manager of a supermarket is interested in the mean number of items in the
baskets of customers who use the "express" checkout lane. Since customers
do not queue without at least one item in their basket, zero is not a
possible observation. The manager counts the number of items in the baskets
of \(@n\) customers selected at random, giving the following counts:
\begin{align*}
@x
\end{align*}
$PAR
Assuming the model given above, derive the likelihood function in this case,
and evaluate the likelihood at the point \(\lambda =@lambda1\). When
simplifying the likelihood function, $BBOLD do not $EBOLD  drop factors without \(\lambda\)!
In this case the likelihood function \(L\) satisfies:
$BR
$BR
\{ $mcb->buttons() \}
$BR
$BR

$BBOLD Part c) $EBOLD
Write down the natural log of the likelihood function (a.k.a. the log-likelihood function), and evaluate it at \(\lambda
=@lambda2\). Again, do not drop any parts of the expression. Provide your answer to three decimal places.
$BR
\{ ans_rule(12) \} 
$BR
$BR

$BBOLD Part d) $EBOLD
In order to find the maximum likelihood estimator of the parameter \(\lambda\),
you would take a derivative of the log-likelihood function, and set it euqal to
0.  You will not be able to solve the resulting equation, however, if we denote 
the estimate \(\widehat{\lambda}\), you will be able to decide which of the
following equations must \(\widehat{\lambda}\) satisfy:
$BR
$BR
\{ $mcd->buttons() \}
$BR
$BR

$BBOLD Part e) $EBOLD
Using parts $BBOLD a) $EBOLD and $BBOLD d)$EBOLD, provide the maximum likelihood estimate for the mean number of
shopping basket items for the customers at the supermarket who use the
express checkout, giving your answer to two decimal places.
$BR
\{ ans_rule(12) \} 
$BR
$BR



END_TEXT
##############################################################



##############################################################
## Show answer
##############################################################
ANS( $mca->cmp() );
ANS( $mca1->cmp() );
ANS( $mcb->cmp() );
ANS( num_cmp($ans_c, tol=> 0.001) );
ANS( $mcd->cmp() );
ANS( num_cmp($ans_e, tol=> 0.01) );
##############################################################



##############################################################
#  Solution
##############################################################
Context()->texStrings;
Context()->{format}{number} = "%.2f";
BEGIN_SOLUTION
$BR
$BBOLD Part a) $EBOLD 
Directly
\begin{align*}
\sum_{x=1}^{\infty }\frac{x\lambda ^{x}e^{-\lambda }}{x!\left( 1-e^{-\lambda
}\right) } &= \lambda \left( \frac{e^{-\lambda }}{1-e^{-\lambda }}\right)
\sum_{x=1}^{\infty }\frac{\lambda ^{x-1}}{\left( x-1\right) !} \\
&=\lambda \left( \frac{e^{-\lambda }}{1-e^{-\lambda }}\right)
\sum_{x=0}^{\infty }\frac{\lambda }{x!} \\
&=\lambda \left( \frac{e^{-\lambda }}{1-e^{-\lambda }}\right) e^{\lambda }
\\
&=\frac{\lambda }{1-e^{-\lambda }}.
\end{align*}

$BR
$BR
$BBOLD Part b) $EBOLD 
The likelihood for the truncated Poisson is
\begin{align*}
L\left( \lambda ;x_{1},\dots ,x_{@n}\right) =\frac{\lambda
^{\sum_{i=1}^{@n}x_{i}}e^{-@n\lambda }}{\left( \prod_{i=1}^{@n}x_{i}!\right) \left(
1-e^{-\lambda }\right) ^{@n}},
\end{align*}
which can be evaluated for the data above at \(\lambda = @lambda1\) to give \(@ans_b_base \times 10^{@ans_b_pow} \).
$BR
$BR
$BBOLD Part c) $EBOLD 
Taking logarithms, we have
\begin{align*}
 l\left( \lambda ;x_{1},\dots ,x_{@n}\right) =\sum_{i=1}^{@n}x_{i}\log \left( \lambda
\right) -@n\lambda -\log \left( \prod_{i=1}^{@n} x_{i}!\right) -@n\log \left(
1-e^{-\lambda }\right) 
\end{align*}
which can be evaluated for the data above at \(\lambda = @lambda2\) to give \(@ans_c_round\).
$BR
$BR
$BBOLD Part d) $EBOLD 
Differentiating with respect to \(\lambda\) we have
\begin{align*}
\frac{\partial l\left( \lambda ;x_{1},...,x_{@n}\right) }{\partial \lambda 
} &=\frac{1}{\lambda }\sum_{i=1}^{@n}x_{i}-@n-\frac{@ne^{-\lambda }}{\left(
1-e^{-\lambda }\right) } \\
&=\frac{@n\overline{x}}{\lambda }-\frac{@n}{\left( 1-e^{-\lambda }\right) }
\end{align*}
which is zero at the MLE. Rearranging, we find the MLE \(\widehat{\lambda}\)
satisfies
\begin{align*}
\frac{\widehat{\lambda}}{\left( 1-e^{-\widehat{\lambda}}\right) }=\overline{x}.
\end{align*}
$BR
$BR
$BBOLD Part e) $EBOLD 
We require the MLE of \(g\left( \lambda \right) =\lambda /\left(
1-e^{-\lambda }\right)\). Now since \(g\left( \lambda \right)\) 
is a 1:1 function of \(\lambda\), its MLE is \(g\left( \widehat{\lambda}
\right) =\overline{x}\) by (d). 

END_SOLUTION
##############################################################



ENDDOCUMENT();
